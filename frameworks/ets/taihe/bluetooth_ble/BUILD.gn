# Copyright (C) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/config/components/ets_frontend/ets2abc_config.gni")
import("//build/ohos.gni")
import("//build/ohos/taihe_idl/taihe.gni")

SUBSYSTEM_DIR = "//foundation/communication"

copy_taihe_idl("bluetooth_ble_taihe") {
  sources = [ 
    "idl/ohos.bluetooth.ble.taihe", 
  ]
  deps = [
    "$SUBSYSTEM_DIR/bluetooth/frameworks/ets/taihe/bluetooth_constant:bluetooth_constant_taihe"
  ]
}

subsystem_name = "communication"
part_name = "bluetooth"
taihe_generated_file_path_ble = "$taihe_file_path/out/$subsystem_name/$part_name/ble"

ohos_taihe("run_taihe") {
  taihe_generated_file_path = "${taihe_generated_file_path_ble}"
  deps = [ ":bluetooth_ble_taihe" ]
  outputs = [
    "$taihe_generated_file_path/src/ohos.bluetooth.ble.ani.cpp",
    "$taihe_generated_file_path/src/ohos.bluetooth.ble.abi.c",
  ]
}

taihe_shared_library("bluetoothBle_taihe_native") {
  taihe_generated_file_path = "${taihe_generated_file_path_ble}"
  part_name = "$part_name"
  subsystem_name = "$subsystem_name"
  sources = get_target_outputs(":run_taihe")
  include_dirs = [
    "include",
    "src",
    "$SUBSYSTEM_DIR/bluetooth/frameworks/inner/include",
    "$SUBSYSTEM_DIR/bluetooth/interfaces/inner_api/include",
    "$SUBSYSTEM_DIR/bluetooth/frameworks/ets/taihe/common",
    "$SUBSYSTEM_DIR/bluetooth/frameworks/ets/taihe/parser"
  ]
  sources += [
    "src/ani_constructor.cpp",
    "src/ohos.bluetooth.ble.impl.cpp",
    "src/taihe_bluetooth_ble_advertise_callback.cpp",
    "src/taihe_bluetooth_ble_central_manager_callback.cpp",
    "src/taihe_bluetooth_ble_utils.cpp",
    "src/taihe_bluetooth_gatt_client.cpp",
    "src/taihe_bluetooth_gatt_client_callback.cpp",
    "src/taihe_bluetooth_gatt_server_callback.cpp",
    "src/taihe_bluetooth_gatt_server.cpp",
    "$SUBSYSTEM_DIR/bluetooth/frameworks/ets/taihe/common/taihe_bluetooth_utils.cpp",
    "$SUBSYSTEM_DIR/bluetooth/frameworks/ets/taihe/common/taihe_bluetooth_error.cpp",
    "$SUBSYSTEM_DIR/bluetooth/frameworks/ets/taihe/common/taihe_async_callback.cpp",
    "$SUBSYSTEM_DIR/bluetooth/frameworks/ets/taihe/common/taihe_async_work.cpp",
    "$SUBSYSTEM_DIR/bluetooth/frameworks/ets/taihe/common/taihe_ha_event_utils.cpp",
    "$SUBSYSTEM_DIR/bluetooth/frameworks/ets/taihe/common/taihe_native_object.cpp",
    "$SUBSYSTEM_DIR/bluetooth/frameworks/ets/taihe/common/taihe_timer.cpp",
    "$SUBSYSTEM_DIR/bluetooth/frameworks/ets/taihe/parser/taihe_parser_utils.cpp",
  ]
  deps = [
    ":run_taihe",
    "$SUBSYSTEM_DIR/bluetooth/frameworks/inner:btframework",
  ]
  external_deps = [
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "hiappevent:hiappevent_innerapi",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "ipc:ipc_single",
    "runtime_core:ani_helpers",
    "samgr:samgr_proxy",
  ]
  sanitize = {
    cfi = true  # Enable/disable control flow integrity detection
    boundary_sanitize = true  # Enable boundary san detection
    cfi_cross_dso = true  # Cross-SO CFI Checks
    integer_overflow = true  # Enable integer overflow detection
    ubsan = true  # Enable some Ubsan options
    debug = false
  }
}

generate_static_abc("bluetoothBle_abc") {
  base_url = "${taihe_generated_file_path_ble}"
  files = [ "${taihe_generated_file_path_ble}/@ohos.bluetooth.ble.ets" ]
  is_boot_abc = "True"
  device_dst_file = "/system/framework/bluetoothBle_abc.abc"
  dependencies = [ ":run_taihe" ]
}

ohos_prebuilt_etc("bluetoothBle_etc") {
  source = "$target_out_dir/bluetoothBle_abc.abc"
  module_install_dir = "framework"
  part_name = "$part_name"
  subsystem_name = "$subsystem_name"
  deps = [ ":bluetoothBle_abc" ]
}

group("bluetoothBle_taihe") {
  deps = [
    ":bluetoothBle_etc",
    ":bluetoothBle_taihe_native"
  ]
  # deps = [":run_taihe"]
}